{"version":3,"sources":["webpack:///./src/utils/data.js","webpack:///./src/options/App.vue?852c","webpack:///./src/options/App.vue?f362","webpack:///src/options/App.vue","webpack:///./src/options/App.vue","webpack:///./src/options/App.vue?cf6f","webpack:///./src/options/main.js"],"names":["optionKeys","clientAppPlatforms","recaptchaChallengeUrlRx","captchaGoogleSpeechApiLangCodes","ar","af","am","hy","az","eu","bn","bg","ca","hr","cs","da","nl","en","et","fil","fi","fr","gl","ka","de","el","gu","iw","hi","hu","is","id","it","ja","kn","ko","lo","lv","lt","ms","ml","mr","mn","no","fa","pl","pt","ro","ru","sr","si","sk","sl","es","sw","sv","ta","te","th","tr","uk","ur","vi","zu","captchaIbmSpeechApiLangCodes","captchaMicrosoftSpeechApiLangCodes","captchaWitSpeechApiLangCodes","ibmSpeechApiUrls","seoul","london","frankfurt","dallas","washington","sydney","tokyo","microsoftSpeechApiUrls","eastAu","centralCa","centralUs","centralFr","centralIn","eastJp","westJp","southBr","centralKr","northCh","northCentralUs","southCentralUs","westCentralUs","southUk","eastUs","eastUs2","westUs","westUs2","eastAsia","southeastAsia","westEu","northEu","components","data","dataLoaded","selectOptions","speechService","ibmSpeechApiLoc","microsoftSpeechApiLoc","witSpeechApiLang","witSpeechApis","clientAppVerified","clientAppInstalled","clientAppDownloadUrl","installGuideUrl","options","googleSpeechApiKey","ibmSpeechApiKey","microsoftSpeechApiKey","witSpeechApiKeys","loadEnglishChallenge","tryEnglishSpeechModel","simulateUserInput","autoUpdateClientApp","navigateWithKeyboard","methods","getText","verifyClientApp","async","this","os","setWitSpeechApiLangOptions","filter","addWitSpeechApi","push","saveWitSpeechApiKey","value","lang","apiKeys","Object","assign","created","storage","option","keys","$watch","document","title","_vm","_h","$createElement","_c","_self","attrs","staticClass","_m","_v","model","callback","$$v","$set","expression","trim","_e","_s","_l","item","key","on","$event","domProps","$refs","dlLink","click","ref","fonts","load","err","Vue","render","h","App","init"],"mappings":"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I,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,QACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAGAG,EAA+B,CACnC9D,GAAI,SACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,UACJC,GAAI,GACJC,GAAI,UACJ,QAAS,GACT,QAAS,UACT,QAAS,UACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,QACJ,QAAS,UACTC,GAAI,UACJC,GAAI,GACJC,IAAK,GACLC,GAAI,UACJC,GAAI,SACJ,QAAS,SACTC,GAAI,GACJC,GAAI,GACJC,GAAI,SACJ,QAAS,SACT,QAAS,SACTC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,QACJC,GAAI,GACJC,GAAI,GACJC,GAAI,aACJC,GAAI,UACJC,GAAI,WACJC,GAAI,UACJC,GAAI,SACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,QACJC,GAAI,YACJC,GAAI,UACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,SACJC,GAAI,aACJ,QAAS,aACT,QAAS,aACTC,GAAI,GACJC,GAAI,UACJC,GAAI,GACJC,GAAI,UACJC,GAAI,GACJC,GAAI,GACJC,GAAI,UACJ,SAAU,UACVC,GAAI,GACJC,GAAI,UACJC,GAAI,QACJC,GAAI,SACJC,GAAI,OACJC,GAAI,UACJC,GAAI,GACJC,GAAI,OACJC,GAAI,aACJC,GAAI,IAIAI,EAAmB,CACvBC,MAAO,sEACPC,OAAQ,qEACRC,UACE,qEACFC,OACE,wEACFC,WACE,uEACFC,OAAQ,sEACRC,MAAO,uEAIHC,EAAyB,CAC7BC,OACE,sGACFC,UACE,sGACFC,UACE,kGACFC,UACE,sGACFC,UACE,qGACFC,OACE,kGACFC,OACE,kGACFC,QACE,oGACFC,UACE,qGACFC,QACE,yGACFC,eACE,uGACFC,eACE,uGACFC,cACE,sGACFC,QACE,gGACFC,OACE,+FACFC,QACE,+FACFC,OACE,+FACFC,QACE,gGACFC,SACE,iGACFC,cAC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","file":"options/script.js","sourcesContent":["const optionKeys = [\n  'speechService',\n  'googleSpeechApiKey',\n  'ibmSpeechApiLoc',\n  'ibmSpeechApiKey',\n  'microsoftSpeechApiLoc',\n  'microsoftSpeechApiKey',\n  'witSpeechApiKeys',\n  'loadEnglishChallenge',\n  'tryEnglishSpeechModel',\n  'simulateUserInput',\n  'autoUpdateClientApp',\n  'navigateWithKeyboard'\n];\n\nconst clientAppPlatforms = [\n  'windows/amd64',\n  'windows/386',\n  'linux/amd64',\n  'macos/amd64'\n];\n\nconst recaptchaChallengeUrlRx = /^https:\\/\\/www\\.(?:google\\.com|recaptcha\\.net)\\/recaptcha\\/(?:api2|enterprise)\\/bframe.*/;\n\n// https://developers.google.com/recaptcha/docs/language\n// https://cloud.google.com/speech-to-text/docs/languages\nconst captchaGoogleSpeechApiLangCodes = {\n  ar: 'ar-SA', // Arabic\n  af: 'af-ZA', // Afrikaans\n  am: 'am-ET', // Amharic\n  hy: 'hy-AM', // Armenian\n  az: 'az-AZ', // Azerbaijani\n  eu: 'eu-ES', // Basque\n  bn: 'bn-BD', // Bengali\n  bg: 'bg-BG', // Bulgarian\n  ca: 'ca-ES', // Catalan\n  'zh-HK': 'cmn-Hans-HK', // Chinese (Hong Kong)\n  'zh-CN': 'cmn-Hans-CN', // Chinese (Simplified)\n  'zh-TW': 'cmn-Hant-TW', // Chinese (Traditional)\n  hr: 'hr-HR', // Croatian\n  cs: 'cs-CZ', // Czech\n  da: 'da-DK', // Danish\n  nl: 'nl-NL', // Dutch\n  'en-GB': 'en-GB', // English (UK)\n  en: 'en-US', // English (US)\n  et: '', // Estonian\n  fil: 'fil-PH', // Filipino\n  fi: 'fi-FI', // Finnish\n  fr: 'fr-FR', // French\n  'fr-CA': 'fr-CA', // French (Canadian)\n  gl: 'gl-ES', // Galician\n  ka: 'ka-GE', // Georgian\n  de: 'de-DE', // German\n  'de-AT': 'de-DE', // German (Austria)\n  'de-CH': 'de-DE', // German (Switzerland)\n  el: 'el-GR', // Greek\n  gu: 'gu-IN', // Gujarati\n  iw: 'he-IL', // Hebrew\n  hi: 'hi-IN', // Hindi\n  hu: 'hu-HU', // Hungarian\n  is: 'is-IS', // Icelandic\n  id: 'id-ID', // Indonesian\n  it: 'it-IT', // Italian\n  ja: 'ja-JP', // Japanese\n  kn: 'kn-IN', // Kannada\n  ko: 'ko-KR', // Korean\n  lo: 'lo-LA', // Laothian\n  lv: 'lv-LV', // Latvian\n  lt: 'lt-LT', // Lithuanian\n  ms: 'ms-MY', // Malay\n  ml: 'ml-IN', // Malayalam\n  mr: 'mr-IN', // Marathi\n  mn: '', // Mongolian\n  no: 'nb-NO', // Norwegian\n  fa: 'fa-IR', // Persian\n  pl: 'pl-PL', // Polish\n  pt: 'pt-PT', // Portuguese\n  'pt-BR': 'pt-BR', // Portuguese (Brazil)\n  'pt-PT': 'pt-PT', // Portuguese (Portugal)\n  ro: 'ro-RO', // Romanian\n  ru: 'ru-RU', // Russian\n  sr: 'sr-RS', // Serbian\n  si: 'si-LK', // Sinhalese\n  sk: 'sk-SK', // Slovak\n  sl: 'sl-SI', // Slovenian\n  es: 'es-ES', // Spanish\n  'es-419': 'es-MX', // Spanish (Latin America)\n  sw: 'sw-TZ', // Swahili\n  sv: 'sv-SE', // Swedish\n  ta: 'ta-IN', // Tamil\n  te: 'te-IN', // Telugu\n  th: 'th-TH', // Thai\n  tr: 'tr-TR', // Turkish\n  uk: 'uk-UA', // Ukrainian\n  ur: 'ur-IN', // Urdu\n  vi: 'vi-VN', // Vietnamese\n  zu: 'zu-ZA' // Zulu\n};\n\n// https://cloud.ibm.com/docs/services/speech-to-text?topic=speech-to-text-models#models\nconst captchaIbmSpeechApiLangCodes = {\n  ar: 'ar-AR_BroadbandModel', // Arabic\n  af: '', // Afrikaans\n  am: '', // Amharic\n  hy: '', // Armenian\n  az: '', // Azerbaijani\n  eu: '', // Basque\n  bn: '', // Bengali\n  bg: '', // Bulgarian\n  ca: '', // Catalan\n  'zh-HK': '', // Chinese (Hong Kong)\n  'zh-CN': 'zh-CN_BroadbandModel', // Chinese (Simplified)\n  'zh-TW': 'zh-CN_BroadbandModel', // Chinese (Traditional)\n  hr: '', // Croatian\n  cs: '', // Czech\n  da: '', // Danish\n  nl: 'nl-NL_BroadbandModel', // Dutch\n  'en-GB': 'en-GB_BroadbandModel', // English (UK)\n  en: 'en-US_BroadbandModel', // English (US)\n  et: '', // Estonian\n  fil: '', // Filipino\n  fi: '', // Finnish\n  fr: 'fr-FR_BroadbandModel', // French\n  'fr-CA': 'fr-FR_BroadbandModel', // French (Canadian)\n  gl: '', // Galician\n  ka: '', // Georgian\n  de: 'de-DE_BroadbandModel', // German\n  'de-AT': 'de-DE_BroadbandModel', // German (Austria)\n  'de-CH': 'de-DE_BroadbandModel', // German (Switzerland)\n  el: '', // Greek\n  gu: '', // Gujarati\n  iw: '', // Hebrew\n  hi: '', // Hindi\n  hu: '', // Hungarian\n  is: '', // Icelandic\n  id: '', // Indonesian\n  it: 'it-IT_BroadbandModel', // Italian\n  ja: 'ja-JP_BroadbandModel', // Japanese\n  kn: '', // Kannada\n  ko: 'ko-KR_BroadbandModel', // Korean\n  lo: '', // Laothian\n  lv: '', // Latvian\n  lt: '', // Lithuanian\n  ms: '', // Malay\n  ml: '', // Malayalam\n  mr: '', // Marathi\n  mn: '', // Mongolian\n  no: '', // Norwegian\n  fa: '', // Persian\n  pl: '', // Polish\n  pt: 'pt-BR_BroadbandModel', // Portuguese\n  'pt-BR': 'pt-BR_BroadbandModel', // Portuguese (Brazil)\n  'pt-PT': 'pt-BR_BroadbandModel', // Portuguese (Portugal)\n  ro: '', // Romanian\n  ru: '', // Russian\n  sr: '', // Serbian\n  si: '', // Sinhalese\n  sk: '', // Slovak\n  sl: '', // Slovenian\n  es: 'es-ES_BroadbandModel', // Spanish\n  'es-419': 'es-ES_BroadbandModel', // Spanish (Latin America)\n  sw: '', // Swahili\n  sv: '', // Swedish\n  ta: '', // Tamil\n  te: '', // Telugu\n  th: '', // Thai\n  tr: '', // Turkish\n  uk: '', // Ukrainian\n  ur: '', // Urdu\n  vi: '', // Vietnamese\n  zu: '' // Zulu\n};\n\n// https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/language-support#speech-to-text\nconst captchaMicrosoftSpeechApiLangCodes = {\n  ar: 'ar-EG', // Arabic\n  af: '', // Afrikaans\n  am: '', // Amharic\n  hy: '', // Armenian\n  az: '', // Azerbaijani\n  eu: '', // Basque\n  bn: '', // Bengali\n  bg: '', // Bulgarian\n  ca: 'ca-ES', // Catalan\n  'zh-HK': 'zh-HK', // Chinese (Hong Kong)\n  'zh-CN': 'zh-CN', // Chinese (Simplified)\n  'zh-TW': 'zh-TW', // Chinese (Traditional)\n  hr: '', // Croatian\n  cs: '', // Czech\n  da: 'da-DK', // Danish\n  nl: 'nl-NL', // Dutch\n  'en-GB': 'en-GB', // English (UK)\n  en: 'en-US', // English (US)\n  et: '', // Estonian\n  fil: '', // Filipino\n  fi: 'fi-FI', // Finnish\n  fr: 'fr-FR', // French\n  'fr-CA': 'fr-CA', // French (Canadian)\n  gl: '', // Galician\n  ka: '', // Georgian\n  de: 'de-DE', // German\n  'de-AT': 'de-DE', // German (Austria)\n  'de-CH': 'de-DE', // German (Switzerland)\n  el: '', // Greek\n  gu: 'gu-IN', // Gujarati\n  iw: '', // Hebrew\n  hi: 'hi-IN', // Hindi\n  hu: '', // Hungarian\n  is: '', // Icelandic\n  id: '', // Indonesian\n  it: 'it-IT', // Italian\n  ja: 'ja-JP', // Japanese\n  kn: '', // Kannada\n  ko: 'ko-KR', // Korean\n  lo: '', // Laothian\n  lv: '', // Latvian\n  lt: '', // Lithuanian\n  ms: '', // Malay\n  ml: '', // Malayalam\n  mr: 'mr-IN', // Marathi\n  mn: '', // Mongolian\n  no: 'nb-NO', // Norwegian\n  fa: '', // Persian\n  pl: 'pl-PL', // Polish\n  pt: 'pt-PT', // Portuguese\n  'pt-BR': 'pt-BR', // Portuguese (Brazil)\n  'pt-PT': 'pt-PT', // Portuguese (Portugal)\n  ro: '', // Romanian\n  ru: 'ru-RU', // Russian\n  sr: '', // Serbian\n  si: '', // Sinhalese\n  sk: '', // Slovak\n  sl: '', // Slovenian\n  es: 'es-ES', // Spanish\n  'es-419': 'es-MX', // Spanish (Latin America)\n  sw: '', // Swahili\n  sv: 'sv-SE', // Swedish\n  ta: 'ta-IN', // Tamil\n  te: 'te-IN', // Telugu\n  th: 'th-TH', // Thai\n  tr: 'tr-TR', // Turkish\n  uk: '', // Ukrainian\n  ur: '', // Urdu\n  vi: '', // Vietnamese\n  zu: '' // Zulu\n};\n\nconst captchaWitSpeechApiLangCodes = {\n  ar: 'arabic', // Arabic\n  af: '', // Afrikaans\n  am: '', // Amharic\n  hy: '', // Armenian\n  az: '', // Azerbaijani\n  eu: '', // Basque\n  bn: 'bengali', // Bengali\n  bg: '', // Bulgarian\n  ca: 'catalan', // Catalan\n  'zh-HK': '', // Chinese (Hong Kong)\n  'zh-CN': 'chinese', // Chinese (Simplified)\n  'zh-TW': 'chinese', // Chinese (Traditional)\n  hr: '', // Croatian\n  cs: '', // Czech\n  da: '', // Danish\n  nl: 'dutch', // Dutch\n  'en-GB': 'english', // English (UK)\n  en: 'english', // English (US)\n  et: '', // Estonian\n  fil: '', // Filipino\n  fi: 'finnish', // Finnish\n  fr: 'french', // French\n  'fr-CA': 'french', // French (Canadian)\n  gl: '', // Galician\n  ka: '', // Georgian\n  de: 'german', // German\n  'de-AT': 'german', // German (Austria)\n  'de-CH': 'german', // German (Switzerland)\n  el: '', // Greek\n  gu: '', // Gujarati\n  iw: '', // Hebrew\n  hi: 'hindi', // Hindi\n  hu: '', // Hungarian\n  is: '', // Icelandic\n  id: 'indonesian', // Indonesian\n  it: 'italian', // Italian\n  ja: 'japanese', // Japanese\n  kn: 'kannada', // Kannada\n  ko: 'korean', // Korean\n  lo: '', // Laothian\n  lv: '', // Latvian\n  lt: '', // Lithuanian\n  ms: 'malay', // Malay\n  ml: 'malayalam', // Malayalam\n  mr: 'marathi', // Marathi\n  mn: '', // Mongolian\n  no: '', // Norwegian\n  fa: '', // Persian\n  pl: 'polish', // Polish\n  pt: 'portuguese', // Portuguese\n  'pt-BR': 'portuguese', // Portuguese (Brazil)\n  'pt-PT': 'portuguese', // Portuguese (Portugal)\n  ro: '', // Romanian\n  ru: 'russian', // Russian\n  sr: '', // Serbian\n  si: 'sinhala', // Sinhalese\n  sk: '', // Slovak\n  sl: '', // Slovenian\n  es: 'spanish', // Spanish\n  'es-419': 'spanish', // Spanish (Latin America)\n  sw: '', // Swahili\n  sv: 'swedish', // Swedish\n  ta: 'tamil', // Tamil\n  te: 'telugu', // Telugu\n  th: 'thai', // Thai\n  tr: 'turkish', // Turkish\n  uk: '', // Ukrainian\n  ur: 'urdu', // Urdu\n  vi: 'vietnamese', // Vietnamese\n  zu: '' // Zulu\n};\n\n// https://cloud.ibm.com/apidocs/speech-to-text#service-endpoint\nconst ibmSpeechApiUrls = {\n  seoul: 'https://api.kr-seo.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  london: 'https://api.eu-gb.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  frankfurt:\n    'https://api.eu-de.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  dallas:\n    'https://api.us-south.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  washington:\n    'https://api.us-east.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  sydney: 'https://api.au-syd.speech-to-text.watson.cloud.ibm.com/v1/recognize',\n  tokyo: 'https://api.jp-tok.speech-to-text.watson.cloud.ibm.com/v1/recognize'\n};\n\n// https://docs.microsoft.com/en-us/azure/cognitive-services/speech-service/rest-speech-to-text#regions-and-endpoints\nconst microsoftSpeechApiUrls = {\n  eastAu:\n    'https://australiaeast.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralCa:\n    'https://canadacentral.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralUs:\n    'https://centralus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralFr:\n    'https://francecentral.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralIn:\n    'https://centralindia.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastJp:\n    'https://japaneast.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westJp:\n    'https://japanwest.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  southBr:\n    'https://brazilsouth.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  centralKr:\n    'https://koreacentral.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  northCh:\n    'https://switzerlandnorth.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  northCentralUs:\n    'https://northcentralus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  southCentralUs:\n    'https://southcentralus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westCentralUs:\n    'https://westcentralus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  southUk:\n    'https://uksouth.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastUs:\n    'https://eastus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastUs2:\n    'https://eastus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westUs:\n    'https://westus.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westUs2:\n    'https://westus2.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  eastAsia:\n    'https://eastasia.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  southeastAsia:\n    'https://southeastasia.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  westEu:\n    'https://westeurope.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1',\n  northEu:\n    'https://northeurope.stt.speech.microsoft.com/speech/recognition/conversation/cognitiveservices/v1'\n};\n\nexport {\n  optionKeys,\n  clientAppPlatforms,\n  recaptchaChallengeUrlRx,\n  captchaGoogleSpeechApiLangCodes,\n  captchaIbmSpeechApiLangCodes,\n  captchaMicrosoftSpeechApiLangCodes,\n  captchaWitSpeechApiLangCodes,\n  ibmSpeechApiUrls,\n  microsoftSpeechApiUrls\n};\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js!../../node_modules/sass-loader/dist/cjs.js??ref--2-3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js!../../node_modules/sass-loader/dist/cjs.js??ref--2-3!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","<template>\n  <div id=\"app\" v-if=\"dataLoaded\">\n    <div class=\"section\">\n      <div class=\"section-title\" v-once>\n        {{ getText('optionSectionTitle_services') }}\n      </div>\n      <div class=\"option-wrap\">\n        <div class=\"option select\">\n          <v-select\n            :label=\"getText('optionTitle_speechService')\"\n            v-model=\"options.speechService\"\n            :options=\"selectOptions.speechService\"\n          >\n          </v-select>\n        </div>\n\n        <div\n          class=\"option text-field\"\n          v-if=\"options.speechService === 'googleSpeechApi'\"\n        >\n          <v-textfield\n            v-model.trim=\"options.googleSpeechApiKey\"\n            :label=\"getText('inputLabel_apiKey')\"\n          >\n          </v-textfield>\n        </div>\n\n        <a\n          class=\"service-guide\"\n          v-if=\"options.speechService === 'googleSpeechApi'\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://github.com/dessant/buster/wiki/Configuring-Google-Cloud-Speech-to-Text\"\n        >\n          {{ getText('linkText_apiGuide') }}\n        </a>\n\n        <div\n          class=\"option select\"\n          v-if=\"options.speechService === 'ibmSpeechApi'\"\n        >\n          <v-select\n            :label=\"getText('optionTitle_ibmSpeechApiLoc')\"\n            v-model=\"options.ibmSpeechApiLoc\"\n            :options=\"selectOptions.ibmSpeechApiLoc\"\n          >\n          </v-select>\n        </div>\n        <div\n          class=\"option text-field\"\n          v-if=\"options.speechService === 'ibmSpeechApi'\"\n        >\n          <v-textfield\n            v-model.trim=\"options.ibmSpeechApiKey\"\n            :label=\"getText('inputLabel_apiKey')\"\n          >\n          </v-textfield>\n        </div>\n\n        <a\n          class=\"service-guide\"\n          v-if=\"options.speechService === 'ibmSpeechApi'\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://github.com/dessant/buster/wiki/Configuring-IBM-Watson-Speech-to-Text\"\n        >\n          {{ getText('linkText_apiGuide') }}\n        </a>\n\n        <div\n          class=\"option select\"\n          v-if=\"options.speechService === 'microsoftSpeechApi'\"\n        >\n          <v-select\n            :label=\"getText('optionTitle_microsoftSpeechApiLoc')\"\n            v-model=\"options.microsoftSpeechApiLoc\"\n            :options=\"selectOptions.microsoftSpeechApiLoc\"\n          >\n          </v-select>\n        </div>\n        <div\n          class=\"option text-field\"\n          v-if=\"options.speechService === 'microsoftSpeechApi'\"\n        >\n          <v-textfield\n            v-model.trim=\"options.microsoftSpeechApiKey\"\n            :label=\"getText('inputLabel_apiKey')\"\n          >\n          </v-textfield>\n        </div>\n\n        <a\n          class=\"service-guide\"\n          v-if=\"options.speechService === 'microsoftSpeechApi'\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://github.com/dessant/buster/wiki/Configuring-Microsoft-Azure-Speech-to-Text\"\n        >\n          {{ getText('linkText_apiGuide') }}\n        </a>\n\n        <v-textfield\n          v-if=\"options.speechService === 'witSpeechApi'\"\n          v-for=\"item in witSpeechApis\"\n          :key=\"item.id\"\n          :value=\"options.witSpeechApiKeys[item] || ''\"\n          :label=\"\n            getText('inputLabel_apiKeyType', [\n              getText(`optionValue_witSpeechApiLang_${item}`)\n            ])\n          \"\n          @input=\"saveWitSpeechApiKey($event.trim(), item)\"\n        >\n        </v-textfield>\n        <div\n          class=\"wit-add-api\"\n          v-if=\"options.speechService === 'witSpeechApi'\"\n        >\n          <v-select\n            v-model=\"witSpeechApiLang\"\n            :options=\"selectOptions.witSpeechApiLang\"\n            :label=\"getText('optionTitle_witSpeechApiLang')\"\n          >\n          </v-select>\n          <v-button\n            :outlined=\"true\"\n            :disabled=\"!witSpeechApiLang\"\n            :label=\"getText('buttonText_addApi')\"\n            @click=\"addWitSpeechApi\"\n          >\n          </v-button>\n        </div>\n\n        <a\n          class=\"service-guide\"\n          v-if=\"options.speechService === 'witSpeechApi'\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://github.com/dessant/buster/wiki/Configuring-Wit.ai\"\n        >\n          {{ getText('linkText_apiGuide') }}\n        </a>\n      </div>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"section-title\" v-once>\n        {{ getText('optionSectionTitle_client') }}\n      </div>\n      <div class=\"section-desc\" v-once>\n        {{ getText('optionSectionDescription_client') }}\n      </div>\n      <div class=\"option-wrap\">\n        <div\n          class=\"option\"\n          v-if=\"\n            clientAppInstalled ||\n            (clientAppVerified && options.simulateUserInput)\n          \"\n        >\n          <v-form-field\n            input-id=\"si\"\n            :label=\"getText('optionTitle_simulateUserInput')\"\n          >\n            <v-switch id=\"si\" v-model=\"options.simulateUserInput\"></v-switch>\n          </v-form-field>\n        </div>\n\n        <div\n          class=\"option\"\n          v-if=\"clientAppVerified && options.simulateUserInput\"\n        >\n          <v-form-field\n            input-id=\"nc\"\n            :label=\"getText('optionTitle_navigateWithKeyboard')\"\n          >\n            <v-switch id=\"nc\" v-model=\"options.navigateWithKeyboard\"></v-switch>\n          </v-form-field>\n        </div>\n\n        <div class=\"option\" v-if=\"clientAppInstalled\">\n          <v-form-field\n            input-id=\"auc\"\n            :label=\"getText('optionTitle_autoUpdateClientApp')\"\n          >\n            <v-switch id=\"auc\" v-model=\"options.autoUpdateClientApp\"></v-switch>\n          </v-form-field>\n        </div>\n\n        <div\n          class=\"client-download\"\n          v-if=\"clientAppVerified && !clientAppInstalled\"\n        >\n          <div\n            class=\"download-desc\"\n            v-html=\"\n              getText('pageContent_optionClientAppDownloadDesc', [\n                `<a target='_blank' rel='noreferrer' href='${installGuideUrl}'>${getText(\n                  'linkText_installGuide'\n                )}</a>`\n              ])\n            \"\n          ></div>\n          <div class=\"download-error\" v-if=\"!clientAppDownloadUrl\">\n            {{ getText('pageContent_optionClientAppOSError') }}\n          </div>\n\n          <v-button\n            class=\"download-button\"\n            :unelevated=\"true\"\n            :disabled=\"!clientAppDownloadUrl\"\n            :label=\"getText('buttonText_downloadApp')\"\n            @click=\"$refs.dlLink.click()\"\n          >\n          </v-button>\n          <a\n            ref=\"dlLink\"\n            class=\"download-link\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            :href=\"clientAppDownloadUrl\"\n          ></a>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"section\">\n      <div class=\"section-title\" v-once>\n        {{ getText('optionSectionTitle_misc') }}\n      </div>\n      <div class=\"option-wrap\">\n        <div class=\"option\">\n          <v-form-field\n            input-id=\"lec\"\n            :label=\"getText('optionTitle_loadEnglishChallenge')\"\n          >\n            <v-switch\n              id=\"lec\"\n              v-model=\"options.loadEnglishChallenge\"\n            ></v-switch>\n          </v-form-field>\n        </div>\n\n        <div class=\"option\" v-if=\"!options.loadEnglishChallenge\">\n          <v-form-field\n            input-id=\"esm\"\n            :label=\"getText('optionTitle_tryEnglishSpeechModel')\"\n          >\n            <v-switch\n              id=\"esm\"\n              v-model=\"options.tryEnglishSpeechModel\"\n            ></v-switch>\n          </v-form-field>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport browser from 'webextension-polyfill';\nimport {Button, Select, Switch, FormField, TextField} from 'ext-components';\n\nimport storage from 'storage/storage';\nimport {getOptionLabels, pingClientApp} from 'utils/app';\nimport {getText, getPlatform} from 'utils/common';\nimport {clientAppVersion} from 'utils/config';\nimport {\n  optionKeys,\n  clientAppPlatforms,\n  captchaWitSpeechApiLangCodes\n} from 'utils/data';\n\nexport default {\n  components: {\n    [Button.name]: Button,\n    [Select.name]: Select,\n    [Switch.name]: Switch,\n    [FormField.name]: FormField,\n    [TextField.name]: TextField\n  },\n\n  data: function () {\n    return {\n      dataLoaded: false,\n\n      selectOptions: getOptionLabels({\n        speechService: [\n          'witSpeechApiDemo',\n          'googleSpeechApi',\n          'witSpeechApi',\n          'ibmSpeechApi',\n          'microsoftSpeechApi'\n        ],\n        ibmSpeechApiLoc: [\n          'seoul',\n          'london',\n          'frankfurt',\n          'dallas',\n          'washington',\n          'sydney',\n          'tokyo'\n        ],\n        microsoftSpeechApiLoc: [\n          'eastAu',\n          'centralCa',\n          'centralUs',\n          'centralFr',\n          'centralIn',\n          'eastJp',\n          'westJp',\n          'southBr',\n          'centralKr',\n          'northCh',\n          'northCentralUs',\n          'southCentralUs',\n          'westCentralUs',\n          'southUk',\n          'eastUs',\n          'eastUs2',\n          'westUs',\n          'westUs2',\n          'eastAsia',\n          'southeastAsia',\n          'westEu',\n          'northEu'\n        ],\n        witSpeechApiLang: [\n          ...new Set(\n            Object.values(captchaWitSpeechApiLangCodes).filter(Boolean)\n          )\n        ].sort()\n      }),\n\n      witSpeechApiLang: '',\n      witSpeechApis: [],\n\n      clientAppVerified: false,\n      clientAppInstalled: false,\n      clientAppDownloadUrl: '',\n      installGuideUrl: '',\n\n      options: {\n        speechService: '',\n        googleSpeechApiKey: '',\n        ibmSpeechApiLoc: '',\n        ibmSpeechApiKey: '',\n        microsoftSpeechApiLoc: '',\n        microsoftSpeechApiKey: '',\n        witSpeechApiKeys: {},\n        loadEnglishChallenge: false,\n        tryEnglishSpeechModel: false,\n        simulateUserInput: false,\n        autoUpdateClientApp: false,\n        navigateWithKeyboard: false\n      }\n    };\n  },\n\n  methods: {\n    getText,\n\n    verifyClientApp: async function () {\n      try {\n        await pingClientApp();\n        this.clientAppInstalled = true;\n      } catch (err) {\n        if (!this.installGuideUrl) {\n          this.installGuideUrl =\n            'https://github.com/dessant/buster/wiki/Installing-the-client-app';\n          const {os, arch} = await getPlatform();\n          if (clientAppPlatforms.includes(`${os}/${arch}`)) {\n            this.installGuideUrl += `#${os}`;\n            this.clientAppDownloadUrl = `https://github.com/dessant/buster-client/releases/download/v${clientAppVersion}/buster-client-setup-v${clientAppVersion}-${os}-${arch}`;\n            if (os === 'windows') {\n              this.clientAppDownloadUrl += '.exe';\n            }\n          }\n        }\n\n        this.clientAppInstalled = false;\n      }\n\n      this.clientAppVerified = true;\n    },\n\n    setWitSpeechApiLangOptions: function () {\n      this.selectOptions.witSpeechApiLang = this.selectOptions.witSpeechApiLang.filter(\n        item => !this.witSpeechApis.includes(item.id)\n      );\n    },\n\n    addWitSpeechApi: function () {\n      this.witSpeechApis.push(this.witSpeechApiLang);\n      this.witSpeechApiLang = '';\n      this.setWitSpeechApiLangOptions();\n    },\n\n    saveWitSpeechApiKey: function (value, lang) {\n      const apiKeys = this.options.witSpeechApiKeys;\n      if (value) {\n        this.options.witSpeechApiKeys = Object.assign({}, apiKeys, {\n          [lang]: value\n        });\n      } else if (apiKeys[lang]) {\n        delete apiKeys[lang];\n        this.options.witSpeechApiKeys = Object.assign({}, apiKeys);\n      }\n    }\n  },\n\n  created: async function () {\n    const options = await storage.get(optionKeys, 'sync');\n\n    for (const option of Object.keys(this.options)) {\n      this.options[option] = options[option];\n      this.$watch(`options.${option}`, async function (value) {\n        await storage.set({[option]: value}, 'sync');\n      });\n    }\n\n    this.witSpeechApis = Object.keys(options.witSpeechApiKeys);\n    this.setWitSpeechApiLangOptions();\n\n    document.title = getText('pageTitle', [\n      getText('pageTitle_options'),\n      getText('extensionName')\n    ]);\n\n    this.verifyClientApp();\n\n    this.dataLoaded = true;\n  }\n};\n</script>\n\n<style lang=\"scss\">\n$mdc-theme-primary: #1abc9c;\n\n@import '@material/select/mdc-select';\n@import '@material/theme/mixins';\n@import '@material/typography/mixins';\n@import '@material/button/mixins';\n\nbody {\n  margin: 0;\n  @include mdc-typography-base;\n  font-size: 100%;\n  background-color: #ffffff;\n  overflow: visible !important;\n}\n\n#app {\n  display: grid;\n  grid-row-gap: 32px;\n  padding: 24px;\n}\n\n.mdc-switch {\n  margin-right: 16px;\n}\n\n.section-title,\n.section-desc {\n  @include mdc-theme-prop(color, text-primary-on-light);\n}\n\n.section-title {\n  @include mdc-typography(headline6);\n}\n\n.section-desc {\n  @include mdc-typography(body2);\n  padding-top: 8px;\n  max-width: 380px;\n}\n\n.option-wrap {\n  display: grid;\n  grid-row-gap: 24px;\n  padding-top: 24px;\n  grid-auto-columns: min-content;\n}\n\n.option {\n  display: flex;\n  align-items: center;\n  height: 24px;\n\n  & .mdc-form-field {\n    max-width: calc(100vw - 48px);\n\n    & label {\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n}\n\n.option {\n  &.select,\n  &.text-field {\n    height: 56px;\n  }\n}\n\n.option.select {\n  align-items: start;\n\n  & .mdc-select__anchor,\n  & .mdc-select__menu {\n    max-width: calc(100vw - 48px);\n  }\n\n  & .mdc-select__selected-text {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n}\n\n.wit-add-api {\n  display: flex;\n  align-items: center;\n}\n\n.wit-add-api > button {\n  margin-left: 24px;\n  white-space: nowrap;\n}\n\n.service-guide {\n  @include mdc-typography(body1);\n}\n\n.client-download {\n  min-width: 300px;\n}\n\n.download-desc,\n.download-error {\n  @include mdc-theme-prop(color, text-primary-on-light);\n  @include mdc-typography(body2);\n}\n\n.download-desc a {\n  @include mdc-typography(body2);\n}\n\n.download-desc {\n  max-width: 240px;\n}\n\n.download-error {\n  margin-top: 12px;\n  color: #e74c3c;\n}\n\n.download-link {\n  visibility: hidden;\n}\n\n.download-button {\n  @include mdc-button-ink-color(#fff);\n  width: 200px;\n  height: 48px;\n  margin-top: 24px;\n}\n</style>\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=716e7818&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.dataLoaded)?_c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"section\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"option-wrap\"},[_c('div',{staticClass:\"option select\"},[_c('v-select',{attrs:{\"label\":_vm.getText('optionTitle_speechService'),\"options\":_vm.selectOptions.speechService},model:{value:(_vm.options.speechService),callback:function ($$v) {_vm.$set(_vm.options, \"speechService\", $$v)},expression:\"options.speechService\"}})],1),_vm._v(\" \"),(_vm.options.speechService === 'googleSpeechApi')?_c('div',{staticClass:\"option text-field\"},[_c('v-textfield',{attrs:{\"label\":_vm.getText('inputLabel_apiKey')},model:{value:(_vm.options.googleSpeechApiKey),callback:function ($$v) {_vm.$set(_vm.options, \"googleSpeechApiKey\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"options.googleSpeechApiKey\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'googleSpeechApi')?_c('a',{staticClass:\"service-guide\",attrs:{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"https://github.com/dessant/buster/wiki/Configuring-Google-Cloud-Speech-to-Text\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.getText('linkText_apiGuide'))+\"\\n      \")]):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'ibmSpeechApi')?_c('div',{staticClass:\"option select\"},[_c('v-select',{attrs:{\"label\":_vm.getText('optionTitle_ibmSpeechApiLoc'),\"options\":_vm.selectOptions.ibmSpeechApiLoc},model:{value:(_vm.options.ibmSpeechApiLoc),callback:function ($$v) {_vm.$set(_vm.options, \"ibmSpeechApiLoc\", $$v)},expression:\"options.ibmSpeechApiLoc\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'ibmSpeechApi')?_c('div',{staticClass:\"option text-field\"},[_c('v-textfield',{attrs:{\"label\":_vm.getText('inputLabel_apiKey')},model:{value:(_vm.options.ibmSpeechApiKey),callback:function ($$v) {_vm.$set(_vm.options, \"ibmSpeechApiKey\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"options.ibmSpeechApiKey\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'ibmSpeechApi')?_c('a',{staticClass:\"service-guide\",attrs:{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"https://github.com/dessant/buster/wiki/Configuring-IBM-Watson-Speech-to-Text\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.getText('linkText_apiGuide'))+\"\\n      \")]):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'microsoftSpeechApi')?_c('div',{staticClass:\"option select\"},[_c('v-select',{attrs:{\"label\":_vm.getText('optionTitle_microsoftSpeechApiLoc'),\"options\":_vm.selectOptions.microsoftSpeechApiLoc},model:{value:(_vm.options.microsoftSpeechApiLoc),callback:function ($$v) {_vm.$set(_vm.options, \"microsoftSpeechApiLoc\", $$v)},expression:\"options.microsoftSpeechApiLoc\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'microsoftSpeechApi')?_c('div',{staticClass:\"option text-field\"},[_c('v-textfield',{attrs:{\"label\":_vm.getText('inputLabel_apiKey')},model:{value:(_vm.options.microsoftSpeechApiKey),callback:function ($$v) {_vm.$set(_vm.options, \"microsoftSpeechApiKey\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"options.microsoftSpeechApiKey\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'microsoftSpeechApi')?_c('a',{staticClass:\"service-guide\",attrs:{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"https://github.com/dessant/buster/wiki/Configuring-Microsoft-Azure-Speech-to-Text\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.getText('linkText_apiGuide'))+\"\\n      \")]):_vm._e(),_vm._v(\" \"),_vm._l((_vm.witSpeechApis),function(item){return (_vm.options.speechService === 'witSpeechApi')?_c('v-textfield',{key:item.id,attrs:{\"value\":_vm.options.witSpeechApiKeys[item] || '',\"label\":_vm.getText('inputLabel_apiKeyType', [\n            _vm.getText((\"optionValue_witSpeechApiLang_\" + item))\n          ])},on:{\"input\":function($event){_vm.saveWitSpeechApiKey($event.trim(), item)}}}):_vm._e()}),_vm._v(\" \"),(_vm.options.speechService === 'witSpeechApi')?_c('div',{staticClass:\"wit-add-api\"},[_c('v-select',{attrs:{\"options\":_vm.selectOptions.witSpeechApiLang,\"label\":_vm.getText('optionTitle_witSpeechApiLang')},model:{value:(_vm.witSpeechApiLang),callback:function ($$v) {_vm.witSpeechApiLang=$$v},expression:\"witSpeechApiLang\"}}),_vm._v(\" \"),_c('v-button',{attrs:{\"outlined\":true,\"disabled\":!_vm.witSpeechApiLang,\"label\":_vm.getText('buttonText_addApi')},on:{\"click\":_vm.addWitSpeechApi}})],1):_vm._e(),_vm._v(\" \"),(_vm.options.speechService === 'witSpeechApi')?_c('a',{staticClass:\"service-guide\",attrs:{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":\"https://github.com/dessant/buster/wiki/Configuring-Wit.ai\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.getText('linkText_apiGuide'))+\"\\n      \")]):_vm._e()],2)]),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_c('div',{staticClass:\"option-wrap\"},[(\n          _vm.clientAppInstalled ||\n          (_vm.clientAppVerified && _vm.options.simulateUserInput)\n        )?_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"si\",\"label\":_vm.getText('optionTitle_simulateUserInput')}},[_c('v-switch',{attrs:{\"id\":\"si\"},model:{value:(_vm.options.simulateUserInput),callback:function ($$v) {_vm.$set(_vm.options, \"simulateUserInput\", $$v)},expression:\"options.simulateUserInput\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.clientAppVerified && _vm.options.simulateUserInput)?_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"nc\",\"label\":_vm.getText('optionTitle_navigateWithKeyboard')}},[_c('v-switch',{attrs:{\"id\":\"nc\"},model:{value:(_vm.options.navigateWithKeyboard),callback:function ($$v) {_vm.$set(_vm.options, \"navigateWithKeyboard\", $$v)},expression:\"options.navigateWithKeyboard\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.clientAppInstalled)?_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"auc\",\"label\":_vm.getText('optionTitle_autoUpdateClientApp')}},[_c('v-switch',{attrs:{\"id\":\"auc\"},model:{value:(_vm.options.autoUpdateClientApp),callback:function ($$v) {_vm.$set(_vm.options, \"autoUpdateClientApp\", $$v)},expression:\"options.autoUpdateClientApp\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.clientAppVerified && !_vm.clientAppInstalled)?_c('div',{staticClass:\"client-download\"},[_c('div',{staticClass:\"download-desc\",domProps:{\"innerHTML\":_vm._s(\n            _vm.getText('pageContent_optionClientAppDownloadDesc', [\n              (\"<a target='_blank' rel='noreferrer' href='\" + _vm.installGuideUrl + \"'>\" + (_vm.getText(\n                'linkText_installGuide'\n              )) + \"</a>\")\n            ])\n          )}}),_vm._v(\" \"),(!_vm.clientAppDownloadUrl)?_c('div',{staticClass:\"download-error\"},[_vm._v(\"\\n          \"+_vm._s(_vm.getText('pageContent_optionClientAppOSError'))+\"\\n        \")]):_vm._e(),_vm._v(\" \"),_c('v-button',{staticClass:\"download-button\",attrs:{\"unelevated\":true,\"disabled\":!_vm.clientAppDownloadUrl,\"label\":_vm.getText('buttonText_downloadApp')},on:{\"click\":function($event){return _vm.$refs.dlLink.click()}}}),_vm._v(\" \"),_c('a',{ref:\"dlLink\",staticClass:\"download-link\",attrs:{\"target\":\"_blank\",\"rel\":\"noreferrer\",\"href\":_vm.clientAppDownloadUrl}})],1):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"section\"},[_vm._m(3),_vm._v(\" \"),_c('div',{staticClass:\"option-wrap\"},[_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"lec\",\"label\":_vm.getText('optionTitle_loadEnglishChallenge')}},[_c('v-switch',{attrs:{\"id\":\"lec\"},model:{value:(_vm.options.loadEnglishChallenge),callback:function ($$v) {_vm.$set(_vm.options, \"loadEnglishChallenge\", $$v)},expression:\"options.loadEnglishChallenge\"}})],1)],1),_vm._v(\" \"),(!_vm.options.loadEnglishChallenge)?_c('div',{staticClass:\"option\"},[_c('v-form-field',{attrs:{\"input-id\":\"esm\",\"label\":_vm.getText('optionTitle_tryEnglishSpeechModel')}},[_c('v-switch',{attrs:{\"id\":\"esm\"},model:{value:(_vm.options.tryEnglishSpeechModel),callback:function ($$v) {_vm.$set(_vm.options, \"tryEnglishSpeechModel\", $$v)},expression:\"options.tryEnglishSpeechModel\"}})],1)],1):_vm._e()])])]):_vm._e()}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_vm._v(\"\\n      \"+_vm._s(_vm.getText('optionSectionTitle_services'))+\"\\n    \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_vm._v(\"\\n      \"+_vm._s(_vm.getText('optionSectionTitle_client'))+\"\\n    \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-desc\"},[_vm._v(\"\\n      \"+_vm._s(_vm.getText('optionSectionDescription_client'))+\"\\n    \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"section-title\"},[_vm._v(\"\\n      \"+_vm._s(_vm.getText('optionSectionTitle_misc'))+\"\\n    \")])}]\n\nexport { render, staticRenderFns }","import Vue from 'vue';\n\nimport App from './App';\n\nasync function init() {\n  try {\n    await document.fonts.load('400 14px Roboto');\n    await document.fonts.load('500 14px Roboto');\n  } catch (err) {}\n\n  new Vue({\n    el: '#app',\n    render: h => h(App)\n  });\n}\n\ninit();\n"],"sourceRoot":""}