name: tests
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 0 7 * *"


jobs:
  # test:
  #   defaults:
  #     run:
  #       shell: bash
  #   strategy:
  #     matrix:
  #       os: ["macos-latest", "ubuntu-latest", "windows-latest"]
  #       include:
  #         - os: macos-latest
  #           INSTALL: brew install tor

  #         - os: ubuntu-latest
  #           INSTALL: sudo apt-get install -y tor

  #         - os: windows-latest
  #           INSTALL: python scripts/download_tor.py

  #       python-version: ["3.9", "3.10"]
  #     fail-fast: false

  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Check out repo
  #       uses: actions/checkout@v1

  #     - name: Install requests
  #       run: pip install requests

  #     - name: Install tor
  #       run: ${{ matrix.INSTALL }}

  #     - name: Set up python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Install Poetry
  #       uses: snok/install-poetry@v1
  #       with:
  #         virtualenvs-create: true
  #         virtualenvs-in-project: true

  #     - name: Load cached venv
  #       id: cached-poetry-deps
  #       uses: actions/cache@v2
  #       with:
  #         path: .venv
  #         key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

  #     - name: Install deps
  #       if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
  #       run: poetry install --no-interaction --no-root

  #     - name: Run tests
  #       run: |
  #         source $VENV
  #         pytest tests/ -k 'not graphical'

  build:
    name: Semantic release and Build
    runs-on: ubuntu-latest
    # needs: test
    concurrency: build
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Set up python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      # - name: Install Poetry
      #   uses: snok/install-poetry@v1
      #   with:
      #     virtualenvs-create: true
      #     virtualenvs-in-project: true

      # - name: Load cached venv
      #   id: cached-poetry-deps
      #   uses: actions/cache@v2
      #   with:
      #     path: .venv
      #     key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      # - name: Install deps
      #   if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      #   run: poetry install --no-interaction --no-root

      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_TOKEN }}
